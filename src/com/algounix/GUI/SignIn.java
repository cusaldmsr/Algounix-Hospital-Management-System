/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.algounix.GUI;

import com.algounix.Dashboards.DashboardAdmin;
import com.algounix.Dashboards.DashboardBackOffice;
import com.algounix.Dashboards.DashboardDoctor;
import com.algounix.Dashboards.DashboardLaboretory;
import com.algounix.Dashboards.DashboardPharmacy;
import com.algounix.Dashboards.DashboardReception;
import com.algounix.Dashboards.DashboardSecurity;
import com.algounix.Model.MySQL;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.awt.Image;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author kusal
 */
public class SignIn extends javax.swing.JFrame {

    public static String empID;
    public static String docID;
    public static String docName;
    public static boolean isDoctor = false;

    public SignIn() {
        initComponents();

        FlatSVGIcon icon1Logo = new FlatSVGIcon("com//algounix//Resources//SignInLogo.svg", jLabel1.getWidth(), jLabel1.getHeight());
        jLabel1.setIcon(icon1Logo);
        FlatSVGIcon iconLogo = new FlatSVGIcon("com//algounix//Resources//HMS-Logo.svg", MenuLogo.getWidth(), MenuLogo.getHeight());
        MenuLogo.setIcon(iconLogo);

        Image icon = new ImageIcon(this.getClass().getResource("/com/algounix/Resources/HMS-Logo.png")).getImage();
        this.setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        MenuLogo = new javax.swing.JLabel();
        textField1 = new com.algounix.Model.TextField();
        passwordField1 = new com.algounix.Model.PasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(205, 245, 253));
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(205, 245, 253));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 599));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Poppins Light", 3, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Unix Hospital");

        jLabel3.setFont(new java.awt.Font("Poppins Light", 3, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Management System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(38, 38, 38)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_START);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Sign In");

        jButton1.setBackground(new java.awt.Color(205, 245, 253));
        jButton1.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jButton1.setText("Sign In");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        textField1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        textField1.setLabelText("Username");
        textField1.setLineColor(new java.awt.Color(0, 169, 255));

        passwordField1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        passwordField1.setLabelText("Password");
        passwordField1.setLineColor(new java.awt.Color(0, 169, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                    .addComponent(textField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(218, Short.MAX_VALUE)
                .addComponent(MenuLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(218, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenuLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(passwordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        GlassPanePopup.showPopup(new Navigation());
        String id = textField1.getText();
        String password = String.valueOf(passwordField1.getPassword());

        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your ID", "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (password.isEmpty()) {

            JOptionPane.showMessageDialog(this, "Please enter your password", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {

            try {

                ResultSet resultSet1 = MySQL.executeSearch("SELECT * FROM `employee` WHERE `id` = '" + id + "' AND `password` = '" + password + "' AND `employee_status_id` = '1' AND `employee_type_id` = '0'");

                if (resultSet1.next()) {
                    empID = resultSet1.getString("id");
                    DashboardAdmin AD = new DashboardAdmin();
                    this.dispose();
                    AD.setVisible(true);
                    empID = id;

                } else {

                    ResultSet resultSet2 = MySQL.executeSearch("SELECT * FROM `doctor` WHERE `id` = '" + id + "' AND `doctor_status_id` = '1' AND `password` = '" + password + "'");

                    if (resultSet2.next()) {
                        docID = resultSet2.getString("id");
                        docName = resultSet2.getString("first_name") + " " + resultSet2.getString("last_name");
                        isDoctor = true;
                        DashboardDoctor DD = new DashboardDoctor();
                        this.dispose();
                        DD.setVisible(true);
                        empID = id;
                    } else {

                        ResultSet resultSet3 = MySQL.executeSearch("SELECT * FROM `employee` WHERE `id` = '" + id + "' AND `password` = '" + password + "' AND `employee_status_id` = '1' AND `employee_type_id` = '2'");

                        if (resultSet3.next()) {
                            empID = resultSet3.getString("id");
                            DashboardReception DR = new DashboardReception();
                            this.dispose();
                            DR.setVisible(true);
                            empID = id;
                        } else {
                            ResultSet resultSet4 = MySQL.executeSearch("SELECT * FROM `employee` WHERE `id` = '" + id + "' AND `password` = '" + password + "' AND `employee_status_id` = '1' AND `employee_type_id` = '1'");

                            if (resultSet4.next()) {
                                empID = resultSet4.getString("id");
                                DashboardDoctor DD = new DashboardDoctor();
                                this.dispose();
                                DD.setVisible(true);
                                empID = id;
                            } else {
                                ResultSet resultSet5 = MySQL.executeSearch("SELECT * FROM `employee` WHERE `id` = '" + id + "' AND `password` = '" + password + "' AND `employee_status_id` = '1' AND `employee_type_id` = '5'");

                                if (resultSet5.next()) {
                                    empID = resultSet5.getString("id");
                                    DashboardBackOffice DBO = new DashboardBackOffice();
                                    this.dispose();
                                    DBO.setVisible(true);
                                    empID = id;

                                } else {
                                    ResultSet resultSet6 = MySQL.executeSearch("SELECT * FROM `employee` WHERE `id` = '" + id + "' AND `password` = '" + password + "' AND `employee_status_id` = '1' AND `employee_type_id` = '6'");

                                    if (resultSet6.next()) {
                                        empID = resultSet6.getString("id");
                                        DashboardPharmacy DP = new DashboardPharmacy();
                                        this.dispose();
                                        DP.setVisible(true);
                                        empID = id;

                                    } else {
                                        ResultSet resultSet7 = MySQL.executeSearch("SELECT * FROM `employee` WHERE `id` = '" + id + "' AND `password` = '" + password + "' AND `employee_status_id` = '1' AND `employee_type_id` = '4'");

                                        if (resultSet7.next()) {
                                            empID = resultSet7.getString("id");
                                            DashboardBackOffice DBO = new DashboardBackOffice();
                                            this.dispose();
                                            DBO.setVisible(true);
                                            empID = id;

                                        } else {

                                            ResultSet resultSet8 = MySQL.executeSearch("SELECT * FROM `employee` WHERE `id` = '" + id + "' AND `password` = '" + password + "' AND `employee_status_id` = '1' AND `employee_type_id` = '3'");

                                            if (resultSet8.next()) {
                                                empID = resultSet8.getString("id");
                                                DashboardSecurity DS = new DashboardSecurity();
                                                this.dispose();
                                                DS.setVisible(true);
                                                empID = id;

                                            } else {

                                                ResultSet resultSet9 = MySQL.executeSearch("SELECT * FROM `employee` WHERE `id` = '" + id + "' AND `password` = '" + password + "' AND `employee_status_id` = '1' AND `employee_type_id` = '7'");

                                                if (resultSet9.next()) {
                                                    empID = resultSet9.getString("id");
                                                    DashboardLaboretory DL = new DashboardLaboretory();
                                                    this.dispose();
                                                    DL.setVisible(true);
                                                    empID = id;

                                                } else {

                                                    JOptionPane.showMessageDialog(this, "Invalid email or password", "Warning", JOptionPane.WARNING_MESSAGE);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        FlatMacLightLaf.setup();
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignIn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MenuLogo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private com.algounix.Model.PasswordField passwordField1;
    private com.algounix.Model.TextField textField1;
    // End of variables declaration//GEN-END:variables
}
